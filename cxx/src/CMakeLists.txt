CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(QBus CXX)

SET(CMAKE_VERBOSE_MAKEFILE TRUE)

IF(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Release")
ENDIF()

# use different output directory for different build type
MESSAGE(STATUS "CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
IF(CMAKE_BUILD_TYPE MATCHES Debug)
    SET(CMAKE_CONFIGURATION_TYPES "Debug")
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "../lib/debug")
    SET(CMAKE_CXX_FLAGS "-g -O0 ${CMAKE_CXX_FLAGS}")
ELSE(CMAKE_BUILD_TYPE MATCHES Debug)
    SET(CMAKE_CONFIGURATION_TYPES "Release")
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "../lib/release")
    SET(CMAKE_CXX_FLAGS "-DNDEBUG -O2 ${CMAKE_CXX_FLAGS}")
ENDIF()
MESSAGE(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")

# find include directories and libraries
SET(CMAKE_FIND_LIBRARY_SUFFIXES .a)
SET(CMAKE_PREFIX_PATH "${PROJECT_SOURCE_DIR}/../thirdparts/local")
MESSAGE(STATUS "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}")

FIND_PATH(LIBRDKAFKA_INCLUDE_DIR NAMES "librdkafka/rdkafka.h")
FIND_LIBRARY(LIBRDKAFKA_LIB NAMES rdkafka)

IF(NOT LIBRDKAFKA_INCLUDE_DIR OR NOT LIBRDKAFKA_LIB)
    MESSAGE(FATAL_ERROR "Can't find librdkafka")
ENDIF()

MESSAGE(STATUS "LIBRDKAFKA_INCLUDE_DIR=${LIBRDKAFKA_INCLUDE_DIR}")
MESSAGE(STATUS "LIBRDKAFKA_LIB=${LIBRDKAFKA_LIB}")

FIND_PATH(LOG4CPLUS_INCLUDE_DIR NAMES "log4cplus/logger.h")
FIND_LIBRARY(LOG4CPLUS_LIB NAMES NAMES log4cplus)

IF(NOT LOG4CPLUS_INCLUDE_DIR OR NOT LOG4CPLUS_LIB)
    MESSAGE(FATAL_ERROR "Can't find log4cplus")
ENDIF()

MESSAGE(STATUS "LOG4CPLUS_INCLUDE_DIR=${LOG4CPLUS_INCLUDE_DIR}")
MESSAGE(STATUS "LOG4CPLUS_LIB=${LOG4CPLUS_LIB}")

# compile target shared library
SET(PROJECT_ALL_FILES
    ${SOURCES}
    ../util/logger.cc
    ./qbus_helper.cc
    ./qbus_config.cc
    ./qbus_record_msg.cc
    ./qbus_consumer_imp.cc
    ./qbus_consumer.cc
    ./qbus_producer.cc
    ./qbus_producer_imp_map.cc
    ./qbus_topic_partition_set.cc
    ./qbus_rdkafka.cc
    )

if (NOT DEFINED LIBNAME)
    set(LIBNAME QBus)
endif ()
ADD_LIBRARY(${LIBNAME} SHARED ${PROJECT_ALL_FILES})

INCLUDE_DIRECTORIES(..)
INCLUDE_DIRECTORIES(${LIBRDKAFKA_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LOG4CPLUS_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${EXTRA_INCLUDE_DIRS})

TARGET_LINK_LIBRARIES(${LIBNAME}
    ${LIBRDKAFKA_LIB}
    ${LOG4CPLUS_LIB}
    dl
    pthread
    rt
    z
    ${EXTRA_LIBS}
    )
